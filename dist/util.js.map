{"version":3,"sources":["util.js"],"names":["writeFileFromTemplate","loadConfiguration","getConfiguration","_","ejs","fs","path","configurationDefaults","_dasherize","s","isString","trim","replace","toLowerCase","dasherize","mixin","source","dest","data","renderFile","then","res","Promise","resolve","reject","writeFile","err","config","require","process","cwd","Object","assign","code","console","error","exit"],"mappings":";;;;;QA8BgBA,qB,GAAAA,qB;QAeAC,iB,GAAAA,iB;QAKAC,gB,GAAAA,gB;;AAlDhB;;IAAOC,C;;AACP;;IAAOC,G;;AACP;;IAAOC,E;;AACP;;IAAOC,I;;;;AAEP,IAAMC,wBAAwB;AACd,YAAO,QADO;AAEd,WAAO;AAFO,CAA9B;;AAKA;;;;;;AAMA,SAASC,UAAT,CAAoBC,CAApB,EAAuB;AACnB,QAAIN,EAAEO,QAAF,CAAWD,CAAX,CAAJ,EACI,OAAON,EAAEQ,IAAF,CAAOF,CAAP,EAAUG,OAAV,CAAkB,SAAlB,EAA6B,GAA7B,EAAkCA,OAAlC,CAA0C,UAA1C,EAAsD,KAAtD,EAA6DA,OAA7D,CAAqE,KAArE,EAA4E,GAA5E,EAAiFA,OAAjF,CAAyF,IAAzF,EAA8F,EAA9F,EAAkGC,WAAlG,EAAP;AACJ,WAAOJ,CAAP;AACH;;AAED;;;;AAIA,IAAI,OAAON,EAAEW,SAAT,KAAuB,UAA3B,EAAuC;AACnCX,MAAEY,KAAF,CAAQ,EAAC,aAAcP,UAAf,EAAR;AACH;;AAEM,SAASR,qBAAT,CAA+BgB,MAA/B,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmD;AACtD,WAAOd,IAAIe,UAAJ,CAAeH,MAAf,EAAuBE,IAAvB,EAA6BE,IAA7B,CAAkC,UAACC,GAAD,EAAQ;AAC7C,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnC;AACAnB,eAAGoB,SAAH,CAAaR,IAAb,EAAmBI,GAAnB,EAAwB,UAACK,GAAD,EAAS;AAC/B,oBAAIA,GAAJ,EAAS;AACH,2BAAOF,OAAOE,GAAP,CAAP;AACL;AACD,uBAAOH,SAAP;AACD,aALD;AAMH,SARM,CAAP;AAUH,KAXM,CAAP;AAYH;;AAEM,SAAStB,iBAAT,GAA6B;AAChC,QAAI0B,SAASC,QAAQtB,KAAKiB,OAAL,CAAaM,QAAQC,GAAR,EAAb,EAA4B,mBAA5B,CAAR,CAAb;AACA,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBzB,qBAAlB,EAAyCoB,MAAzC,CAAP;AACH;;AAEM,SAASzB,gBAAT,GAA4B;AAC/B,QAAI;AACA,eAAOD,mBAAP;AACH,KAFD,CAGA,OAAMyB,GAAN,EAAW;AACP,YAAIA,IAAIO,IAAJ,KAAa,kBAAjB,EAAqC;AACjCC,oBAAQC,KAAR,CAAc,OAAd,EAAsB,uHAAtB;AACAN,oBAAQO,IAAR,CAAa,CAAb;AACH,SAHD,MAIK;AACDF,oBAAQC,KAAR,CAAc,OAAd,EAAsB,gDAAtB;AACAD,oBAAQC,KAAR,CAAcT,GAAd;AACAG,oBAAQO,IAAR,CAAa,CAAb;AACH;AACJ;AACJ","file":"util.js","sourcesContent":["import _ from 'lodash';\nimport ejs from 'ejs';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nconst configurationDefaults = {\n                \"base\":\"server\",\n                \"out\": \"dist\"\n            };\n\n/**\n *\n * @param s\n * @returns {*}\n * @private\n */\nfunction _dasherize(s) {\n    if (_.isString(s))\n        return _.trim(s).replace(/[_\\s]+/g, '-').replace(/([A-Z])/g, '-$1').replace(/-+/g, '-').replace(/^-/,'').toLowerCase();\n    return s;\n}\n\n/**\n * @method dasherize\n * @memberOf _\n */\nif (typeof _.dasherize !== 'function') {\n    _.mixin({'dasherize' : _dasherize});\n}\n\nexport function writeFileFromTemplate(source, dest, data) {\n    return ejs.renderFile(source, data).then((res)=> {\n        return new Promise((resolve, reject)=> {\n            //write file\n            fs.writeFile(dest, res, (err) => {\n              if (err) {\n                    return reject(err);\n              }\n              return resolve();\n            });\n        });\n        \n    });\n}\n\nexport function loadConfiguration() {\n    let config = require(path.resolve(process.cwd(), '.themost-cli.json'));\n    return Object.assign({}, configurationDefaults, config);\n}\n\nexport function getConfiguration() {\n    try {\n        return loadConfiguration();\n    }\n    catch(err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            console.error('ERROR','Configuration cannot be found. It seems that current working directory does not contain a MOST Web Framework project.');\n            process.exit(1);\n        }\n        else {\n            console.error('ERROR','An error occurred while loading configuration.');\n            console.error(err);\n            process.exit(1);\n        }\n    }\n}\n"]}