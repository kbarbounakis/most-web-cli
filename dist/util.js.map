{"version":3,"sources":["util.js"],"names":["writeFileFromTemplate","loadConfiguration","getConfiguration","getDataConfiguration","getBuilder","getHttpApplication","_","ejs","fs","path","configurationDefaults","_dasherize","s","isString","trim","replace","toLowerCase","dasherize","mixin","source","dest","data","renderFile","then","res","Promise","resolve","reject","writeFile","err","config","require","process","cwd","Object","assign","code","console","error","exit","SimpleDataContext","configuration","strategyCtor","getStrategy","name","self","undefined","obj","DataConfigurationStrategy","model","isNil","dataModule","paths","DataModel","context","options","DataConfiguration","log","base","ODataConventionModelBuilder","dataObjectModule","ModelClassLoaderStrategy","DataObject","HttpApplication","appModule","app","out","strategy","adapterTypes","configurationAdapterTypes","getSourceAt","Array","isArray","forEach","configurationAdapterType","invariantName","adapterModulePath","type","adapterModule","createInstance"],"mappings":"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","file":"util.js","sourcesContent":["import _ from 'lodash';\nimport ejs from 'ejs';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nconst configurationDefaults = {\n                \"base\":\"server\",\n                \"out\": \"dist/server\"\n            };\n\n/**\n *\n * @param s\n * @returns {*}\n * @private\n */\nfunction _dasherize(s) {\n    if (_.isString(s))\n        return _.trim(s).replace(/[_\\s]+/g, '-').replace(/([A-Z])/g, '-$1').replace(/-+/g, '-').replace(/^-/,'').toLowerCase();\n    return s;\n}\n\n/**\n * @method dasherize\n * @memberOf _\n */\nif (typeof _.dasherize !== 'function') {\n    _.mixin({'dasherize' : _dasherize});\n}\n\nexport function writeFileFromTemplate(source, dest, data) {\n    return ejs.renderFile(source, data).then((res)=> {\n        return new Promise((resolve, reject)=> {\n            //write file\n            fs.writeFile(dest, res, (err) => {\n              if (err) {\n                    return reject(err);\n              }\n              return resolve();\n            });\n        });\n        \n    });\n}\n\nexport function loadConfiguration() {\n    let config = require(path.resolve(process.cwd(), '.themost-cli.json'));\n    return Object.assign({}, configurationDefaults, config);\n}\n\nexport function getConfiguration() {\n    try {\n        return loadConfiguration();\n    }\n    catch(err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            console.error('ERROR','Configuration cannot be found. It seems that current working directory does not contain a MOST Web Framework project.');\n            process.exit(1);\n        }\n        else {\n            console.error('ERROR','An error occurred while loading configuration.');\n            console.error(err);\n            process.exit(1);\n        }\n    }\n}\n\nexport class SimpleDataContext {\n    constructor(configuration) {\n        this.getConfiguration = ()=> configuration;\n    }\n   getStrategy(strategyCtor) {\n    return this.getConfiguration().getStrategy(strategyCtor);\n  }\n  \n  model(name) {\n    let self = this;\n    if ((name === null) || (name === undefined))\n        return null;\n    let obj = self.getConfiguration().getStrategy(function DataConfigurationStrategy() {}).model(name);\n    if (_.isNil(obj))\n        return null;\n    let dataModule = require.resolve('@themost/data/data-model',{\n            paths:[path.resolve(process.cwd(), 'node_modules')]\n        });\n    let DataModel = require(dataModule).DataModel,\n        model = new DataModel(obj);\n    //set model context\n    model.context = self;\n    //return model\n    return model;\n  }\n  \n}\n\nexport function getDataConfiguration(options) {\n    let DataConfiguration;\n    try {\n        let dataModule = require.resolve('@themost/data/data-configuration',{\n            paths:[path.resolve(process.cwd(), 'node_modules')]\n        });\n        DataConfiguration = require(dataModule).DataConfiguration;\n    }\n    catch(err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            console.error('ERROR','MOST Web Framework data configuration module cannot be found.');\n        }\n        else {\n            console.error('ERROR','An error occurred while trying to initialize data configuration.');\n            console.error(err);\n        }\n        return process.exit(1);\n    }\n    console.log('INFO','Initializing configuration');\n    return new DataConfiguration(path.resolve(process.cwd(), options.base, 'config'));\n}\n\nexport function getBuilder(config) {\n    let ODataConventionModelBuilder;\n    let dataModule = require.resolve('@themost/data/odata',{\n            paths:[path.resolve(process.cwd(), 'node_modules')]\n        });\n    ODataConventionModelBuilder = require(dataModule).ODataConventionModelBuilder;\n    \n    let dataObjectModule = require.resolve('@themost/data/data-object',{\n            paths:[path.resolve(process.cwd(), 'node_modules')]\n        });\n    //disable data model class loader\n    config.getStrategy(function ModelClassLoaderStrategy() {}).resolve = function(model) {\n        return require(dataObjectModule).DataObject;\n    };\n    return new ODataConventionModelBuilder(config);\n}\n\nexport function getHttpApplication(options) {\n    let HttpApplication;\n    try {\n        let appModule = require.resolve('@themost/web/app',{\n            paths:[path.resolve(process.cwd(), 'node_modules')]\n        });\n        HttpApplication = require(appModule).HttpApplication;\n    }\n    catch(err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            console.error('ERROR','MOST Web Framework module cannot be found.');\n        }\n        else {\n            console.error('ERROR','An error occurred while trying to initialize MOST Web Framework Application.');\n            console.error(err);\n        }\n        return process.exit(1);\n    }\n    console.log('INFO','Initializing application');\n    let app  = new HttpApplication(path.resolve(process.cwd(), options.out));\n        let strategy = app.getConfiguration().getStrategy(function DataConfigurationStrategy() {\n        });\n        //get adapter types\n        let adapterTypes = strategy.adapterTypes;\n        //get configuration adapter types\n        let configurationAdapterTypes = app.getConfiguration().getSourceAt('adapterTypes');\n        if (Array.isArray(configurationAdapterTypes)) {\n            configurationAdapterTypes.forEach((configurationAdapterType)=> {\n                if (typeof adapterTypes[configurationAdapterType.invariantName] === 'undefined') {\n                    //load adapter type\n                    let adapterModulePath = require.resolve(configurationAdapterType.type,{\n                        paths:[path.resolve(process.cwd(), 'node_modules')]\n                    });\n                    let adapterModule = require(adapterModulePath);\n                    adapterTypes[configurationAdapterType.invariantName] = {\n                        invariantName:configurationAdapterType.invariantName,\n                        name: configurationAdapterType.name,\n                        createInstance:adapterModule.createInstance\n                    };\n                }\n            });\n        }\n    return app;\n}"]}