{"version":3,"sources":["commands/generate_commands/classdef.js"],"names":["builder","generateAnyDefinition","generateDefinition","handler","path","fs","_","writeFileFromTemplate","getConfiguration","getDataConfiguration","SimpleDataContext","getBuilder","command","desc","yargs","option","default","describe","argv","options","config","sources","getEdm","then","schema","console","log","name","entityType","map","x","Object","assign","split","Promise","all","ignoreOther","resolve","reject","test","error","Error","context","emptyModel","upperFirst","camelCase","fields","attributes","inherits","dataTypes","model","imports","modulePath","dasherize","concat","inheritsClassPath","push","forEach","dataType","type","typeName","many","hasOwnProperty","nullable","importModel","find","destFile","destPath","process","cwd","base","existsSync","force","silent","templateFile","__dirname","destFolder","dirname","ensureDir","err","generateExtra","filter","catch","exit"],"mappings":"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","file":"classdef.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2017, THEMOST LP All rights reserved\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport path from 'path';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\nimport { writeFileFromTemplate, getConfiguration, getDataConfiguration, SimpleDataContext, getBuilder } from '../../util';\n\nexport const command = 'classdef <name>';\n\nexport const desc = 'Generate a new data model class definition';\n\nexport function builder(yargs) {\n    return yargs.option('silent', {\n        default: false,\n        describe: 'disable errors'\n    }).option('force', {\n        default: false,\n        describe: 'replace if exists'\n    });\n}\n\nexport function generateAnyDefinition(argv) {\n    \n    //get cli options\n    let options = getConfiguration();\n    //get data configuration\n    let config = getDataConfiguration(options);\n    //get OData Builder\n    let builder = getBuilder(config);\n    let sources = [];\n    return builder.getEdm().then((schema)=> {\n        console.log('INFO', argv);\n        if (argv.name === 'app' || argv.name === '*') {\n            sources = schema.entityType.map((x)=> {\n                return generateDefinition(Object.assign({}, argv, {\n                    \"name\": x.name,\n                    \"silent\": true\n                }), true);\n            });\n        }\n        else {\n            sources = argv.name.split('+').map((x)=> {\n                return generateDefinition(Object.assign({}, argv, {\n                    \"name\": x,\n                    \"silent\": true,\n                    \"ignoreOther\": true\n                }), false);\n            });\n        }\n        return Promise.all(sources);\n    });\n    \n}\n\nexport function generateDefinition(argv, ignoreOther) {\n    return new Promise((resolve, reject) => {\n        let options = getConfiguration();\n        let config = getDataConfiguration(options);\n        //validating name\n        if (!/^[a-zA-Z0-9_-]+$/.test(argv.name)) {\n            console.error('ERROR', 'An error occurred while validating class name.');\n            return reject(new Error('Class name is not valid. Expected only latin characters, numbers or \"_,-\" characters.'));\n        }\n        //--\n        let context = new SimpleDataContext(config);\n        //get OData Builder\n        let builder = getBuilder(config);\n        return builder.getEdm().then((schema)=> {\n            //get model definition\n            let emptyModel = {\n                    name: _.upperFirst(_.camelCase(argv.name)),\n                    fields: [],\n                    attributes:[],\n                    inherits: null\n                };\n            let dataTypes = config.getDataConfiguration().dataTypes;\n            let model = context.model(argv.name) || emptyModel;\n            model.inherits = model.inherits || null; \n            model.imports = [];\n            model.modulePath = _.dasherize(model.name).concat('-model');\n            if (model.inherits) {\n                model.inheritsClassPath = \"./\".concat(_.dasherize(model.inherits).concat('-model'));\n                model.imports.push({\n                  \"name\": model.inherits,\n                  \"from\": model.inheritsClassPath\n                });\n            }\n            else {\n                model.imports.push({\n                  \"name\": \"{DataObject}\",\n                  \"from\": \"@themost/data/data-object\"\n                });\n            }\n            model.attributes.forEach((x)=> {\n               //format data type\n                let dataType = dataTypes[x.type];\n                if (typeof x.type === 'undefined') {\n                    x.typeName = x.many ?  \"Array<*>\" : \"*\";\n                    return;\n                }\n                if (!x.hasOwnProperty('nullable')) {\n                    x.nullable = true;\n                }\n                //add import\n                if (x.model === model.name) {\n                    let importModel = context.model(x.type);\n                    if (importModel && importModel.name !== model.name) {\n                        if (typeof model.imports.find((x)=> { return x.name === importModel.name }) === 'undefined') {\n                            model.imports.push({\n                                \"name\": importModel.name,\n                                \"from\": \"./\".concat(_.dasherize(importModel.name).concat('-model'))\n                            });    \n                        }\n                        x.typeName = x.many ?  \"Array<\" + x.type + \"|any>\" : x.type + \"|any\";\n                        return;\n                    }    \n                }\n                if (dataType) {\n                    x.typeName = x.many ?  \"Array<\" + dataType.type + \">\" : dataType.type;\n                    return;\n                }\n                \n                x.typeName = x.many ?  \"Array<\" + x.type + \">\" : x.type;\n            });\n            //get file name\n            let destFile = _.dasherize(argv.name).concat('-model.d.ts');\n            console.log('INFO', `Generating class ${destFile}`);\n            let destPath = path.resolve(process.cwd(), options.base, `models/${destFile}`);\n            console.log('INFO', `Validating class path ${destPath}`);\n            if (fs.existsSync(destPath) && !argv.force) {\n                if (argv.silent) {\n                    console.error('WARNING', `The specified class [${argv.name}] already exists.`);\n                    return resolve();\n                }\n                console.error('ERROR', 'An error occurred while validating class definition.');\n                return reject(new Error('The specified class already exists.'));\n            }\n            //get template file path\n            let templateFile = path.resolve(__dirname, '../../../templates/generate/classdef.d.ts.ejs');\n            //get destination folder path\n            let destFolder = path.dirname(destPath);\n            console.error('INFO', `Validating class folder (${destFolder}).`);\n            fs.ensureDir(destFolder, (err) => {\n                if (err) {\n                    console.error('ERROR', 'An error occurred while validating destination path.');\n                    return reject(err);\n                }\n                writeFileFromTemplate(templateFile, destPath, model).then(() => {\n                    console.log('INFO', 'The operation was completed succesfully.');\n                    if (ignoreOther) {\n                        return resolve();\n                    }\n                    let generateExtra = model.imports.filter((x)=> {\n                       return x.name !== \"{DataObject}\";\n                    }).map((x)=> {\n                        return generateDefinition(Object.assign({}, argv, {\n                            \"name\": x.name,\n                            \"silent\": true\n                        }));\n                    });\n                    Promise.all(generateExtra).then(()=> {\n                        return resolve();\n                    }).catch((err)=> {\n                        return reject(err);\n                    });\n                }).catch((err) => {\n                    console.error('ERROR', 'An error occurred while generating data model class.');\n                    return reject(err);\n                });\n    \n            }); \n        });\n    });\n}\n\nexport function handler(argv) {\n    generateAnyDefinition(argv).then(() => {\n        return process.exit(0);\n    }).catch((err) => {\n        console.error(err);\n        return process.exit(1);\n    });\n}"]}