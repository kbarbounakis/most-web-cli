{"version":3,"sources":["commands/generate_commands/service.js"],"names":["handler","path","fs","_","writeFileFromTemplate","command","desc","builder","argv","test","name","console","error","process","exit","serviceName","upperFirst","camelCase","concat","destFile","dasherize","log","destPath","resolve","cwd","existsSync","templateFile","__dirname","destFolder","dirname","ensureDir","err","then","catch"],"mappings":";;;;;;QAoBgBA,O,GAAAA,O;;AAZhB;;IAAOC,I;;AACP;;IAAOC,E;;AACP;;IAAOC,C;;AACP;;IAAQC,qB,SAAAA,qB;;;;AAXR;;;;;;;;AAaO,IAAMC,4BAAU,gBAAhB;;AAEA,IAAMC,sBAAO,wBAAb;;AAEA,IAAMC,4BAAU,EAAhB;;AAGA,SAASP,OAAT,CAAiBQ,IAAjB,EAAuB;AAC1B;AACA,QAAI,CAAC,kBAAkBC,IAAlB,CAAuBD,KAAKE,IAA5B,CAAL,EAAwC;AACpCC,gBAAQC,KAAR,CAAc,OAAd,EAAsB,sFAAtB;AACA,eAAOC,QAAQC,IAAR,CAAa,CAAb,CAAP;AACH;AACD;AACA,QAAIC,cAAc,YAAYN,IAAZ,CAAiBD,KAAKE,IAAtB,IAA8BP,EAAEa,UAAF,CAAab,EAAEc,SAAF,CAAYT,KAAKE,IAAjB,CAAb,CAA9B,GAAqEP,EAAEa,UAAF,CAAab,EAAEc,SAAF,CAAYT,KAAKE,IAAL,CAAUQ,MAAV,CAAiB,UAAjB,CAAZ,CAAb,CAAvF;AACA;AACA,QAAIC,WAAWhB,EAAEiB,SAAF,CAAYL,WAAZ,EAAyBG,MAAzB,CAAgC,KAAhC,CAAf;AACAP,YAAQU,GAAR,CAAY,MAAZ,0BAAyCF,QAAzC;AACA,QAAIG,WAAWrB,KAAKsB,OAAL,CAAaV,QAAQW,GAAR,EAAb,uBAA+CL,QAA/C,CAAf;AACAR,YAAQU,GAAR,CAAY,MAAZ,+BAA8CC,QAA9C;AACA,QAAIpB,GAAGuB,UAAH,CAAcH,QAAd,CAAJ,EAA6B;AACzBX,gBAAQC,KAAR,CAAc,OAAd,EAAsB,uCAAtB;AACA,eAAOC,QAAQC,IAAR,CAAa,CAAb,CAAP;AACH;AACD;AACA,QAAIY,eAAezB,KAAKsB,OAAL,CAAaI,SAAb,EAAuB,4CAAvB,CAAnB;;AAEA;AACA,QAAIC,aAAa3B,KAAK4B,OAAL,CAAaP,QAAb,CAAjB;AACAX,YAAQC,KAAR,CAAc,MAAd,kCAAmDgB,UAAnD;AACA1B,OAAG4B,SAAH,CAAaF,UAAb,EAAyB,UAACG,GAAD,EAAQ;AAC9B,YAAIA,GAAJ,EAAS;AACLpB,oBAAQC,KAAR,CAAc,OAAd,EAAsB,sDAAtB;AACCD,oBAAQC,KAAR,CAAcmB,GAAd;AACJ;AACD3B,8BAAsBsB,YAAtB,EAAoCJ,QAApC,EAA8C;AACzCZ,kBAAKK;AADoC,SAA9C,EAEIiB,IAFJ,CAES,YAAK;AACTrB,oBAAQU,GAAR,CAAY,MAAZ,EAAmB,0CAAnB;AACE,mBAAOR,QAAQC,IAAR,CAAa,CAAb,CAAP;AACL,SALF,EAKImB,KALJ,CAKU,UAACF,GAAD,EAAQ;AACbpB,oBAAQC,KAAR,CAAc,OAAd,EAAsB,6CAAtB;AACAD,oBAAQC,KAAR,CAAcmB,GAAd;AACA,mBAAOlB,QAAQC,IAAR,CAAa,CAAb,CAAP;AACH,SATF;AAWF,KAhBD;AAkBH","file":"service.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2017, THEMOST LP All rights reserved\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport path from 'path';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\nimport {writeFileFromTemplate} from '../../util';\n\nexport const command = 'service <name>';\n\nexport const desc = 'Generate a new service';\n\nexport const builder = {\n};\n\nexport function handler(argv) {\n    //validating service name\n    if (!/^[a-zA-Z0-9_]+$/.test(argv.name)) {\n        console.error('ERROR','Service name is not valid. Expected only latin characters, numbers or \"_\" character.');\n        return process.exit(1);\n    }\n    //get service name\n    let serviceName = /service$/i.test(argv.name) ? _.upperFirst(_.camelCase(argv.name)) : _.upperFirst(_.camelCase(argv.name.concat('-service')));\n    //get service file name\n    let destFile = _.dasherize(serviceName).concat('.js');\n    console.log('INFO',`Generating service ${destFile}`);\n    let destPath = path.resolve(process.cwd(), `server/services/${destFile}`);\n    console.log('INFO',`Validating service path ${destPath}`);\n    if (fs.existsSync(destPath)) {\n        console.error('ERROR','The specified service already exists.');\n        return process.exit(1);\n    }\n    //get template file path\n    let templateFile = path.resolve(__dirname,'../../../templates/generate/service.js.ejs');\n    \n    //get destination folder path\n    let destFolder = path.dirname(destPath);\n    console.error('INFO',`Validating service folder (${destFolder}).`);\n    fs.ensureDir(destFolder, (err)=> {\n       if (err) {\n           console.error('ERROR','An error occurred while validating destination path.');\n            console.error(err);\n       } \n       writeFileFromTemplate(templateFile, destPath, {\n            name:serviceName\n        }).then(()=> {\n            console.log('INFO','The operation was completed succesfully.');\n              return process.exit(0);\n        }).catch((err)=> {\n            console.error('ERROR','An error occurred while generating service.');\n            console.error(err);\n            return process.exit(1);\n        });\n       \n    });\n    \n}"]}