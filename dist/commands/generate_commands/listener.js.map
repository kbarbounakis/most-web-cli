{"version":3,"sources":["commands/generate_commands/listener.js"],"names":["handler","path","fs","_","writeFileFromTemplate","command","desc","builder","argv","test","name","console","error","process","exit","destFile","dasherize","concat","log","destPath","resolve","cwd","existsSync","templateFile","__dirname","destFolder","dirname","ensureDir","err","upperFirst","camelCase","then","catch"],"mappings":";;;;;;QAoBgBA,O,GAAAA,O;;AAZhB;;IAAOC,I;;AACP;;IAAOC,E;;AACP;;IAAOC,C;;AACP;;IAAQC,qB,SAAAA,qB;;;;AAXR;;;;;;;;AAaO,IAAMC,4BAAU,iBAAhB;;AAEA,IAAMC,sBAAO,oCAAb;;AAEA,IAAMC,4BAAU,EAAhB;;AAGA,SAASP,OAAT,CAAiBQ,IAAjB,EAAuB;AAC1B;AACA,QAAI,CAAC,mBAAmBC,IAAnB,CAAwBD,KAAKE,IAA7B,CAAL,EAAyC;AACrCC,gBAAQC,KAAR,CAAc,OAAd,EAAsB,0FAAtB;AACA,eAAOC,QAAQC,IAAR,CAAa,CAAb,CAAP;AACH;AACD;AACA,QAAIC,WAAWZ,EAAEa,SAAF,CAAYR,KAAKE,IAAjB,EAAuBO,MAAvB,CAA8B,cAA9B,CAAf;AACAN,YAAQO,GAAR,CAAY,MAAZ,2BAA0CH,QAA1C;AACA,QAAII,WAAWlB,KAAKmB,OAAL,CAAaP,QAAQQ,GAAR,EAAb,wBAAgDN,QAAhD,CAAf;AACAJ,YAAQO,GAAR,CAAY,MAAZ,gCAA+CC,QAA/C;AACA,QAAIjB,GAAGoB,UAAH,CAAcH,QAAd,CAAJ,EAA6B;AACzBR,gBAAQC,KAAR,CAAc,OAAd,EAAsB,wCAAtB;AACA,eAAOC,QAAQC,IAAR,CAAa,CAAb,CAAP;AACH;AACD;AACA,QAAIS,eAAetB,KAAKmB,OAAL,CAAaI,SAAb,EAAuB,6CAAvB,CAAnB;;AAEA;AACA,QAAIC,aAAaxB,KAAKyB,OAAL,CAAaP,QAAb,CAAjB;AACAR,YAAQC,KAAR,CAAc,MAAd,mCAAoDa,UAApD;AACAvB,OAAGyB,SAAH,CAAaF,UAAb,EAAyB,UAACG,GAAD,EAAQ;AAC9B,YAAIA,GAAJ,EAAS;AACLjB,oBAAQC,KAAR,CAAc,OAAd,EAAsB,sDAAtB;AACCD,oBAAQC,KAAR,CAAcgB,GAAd;AACJ;AACDxB,8BAAsBmB,YAAtB,EAAoCJ,QAApC,EAA8C;AACzCT,kBAAKP,EAAE0B,UAAF,CAAa1B,EAAE2B,SAAF,CAAYtB,KAAKE,IAAjB,CAAb;AADoC,SAA9C,EAEIqB,IAFJ,CAES,YAAK;AACTpB,oBAAQO,GAAR,CAAY,MAAZ,EAAmB,0CAAnB;AACE,mBAAOL,QAAQC,IAAR,CAAa,CAAb,CAAP;AACL,SALF,EAKIkB,KALJ,CAKU,UAACJ,GAAD,EAAQ;AACbjB,oBAAQC,KAAR,CAAc,OAAd,EAAsB,8CAAtB;AACAD,oBAAQC,KAAR,CAAcgB,GAAd;AACA,mBAAOf,QAAQC,IAAR,CAAa,CAAb,CAAP;AACH,SATF;AAWF,KAhBD;AAoBH","file":"listener.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2017, THEMOST LP All rights reserved\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport path from 'path';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\nimport {writeFileFromTemplate} from '../../util';\n\nexport const command = 'listener <name>';\n\nexport const desc = 'Generate a new data model listener';\n\nexport const builder = {\n};\n\nexport function handler(argv) {\n    //validating listener name\n    if (!/^[a-zA-Z0-9_-]+$/.test(argv.name)) {\n        console.error('ERROR','Listener name is not valid. Expected only latin characters, numbers or \"_,-\" characters.');\n        return process.exit(1);\n    }\n    //get listener file name\n    let destFile = _.dasherize(argv.name).concat('-listener.js');\n    console.log('INFO',`Generating listener ${destFile}`);\n    let destPath = path.resolve(process.cwd(), `server/listeners/${destFile}`);\n    console.log('INFO',`Validating listener path ${destPath}`);\n    if (fs.existsSync(destPath)) {\n        console.error('ERROR','The specified listener already exists.');\n        return process.exit(1);\n    }\n    //get template file path\n    let templateFile = path.resolve(__dirname,'../../../templates/generate/listener.js.ejs');\n    \n    //get destination folder path\n    let destFolder = path.dirname(destPath);\n    console.error('INFO',`Validating listener folder (${destFolder}).`);\n    fs.ensureDir(destFolder, (err)=> {\n       if (err) {\n           console.error('ERROR','An error occurred while validating destination path.');\n            console.error(err);\n       } \n       writeFileFromTemplate(templateFile, destPath, {\n            name:_.upperFirst(_.camelCase(argv.name))\n        }).then(()=> {\n            console.log('INFO','The operation was completed succesfully.');\n              return process.exit(0);\n        }).catch((err)=> {\n            console.error('ERROR','An error occurred while generating listener.');\n            console.error(err);\n            return process.exit(1);\n        });\n       \n    });\n    \n    \n    \n}"]}