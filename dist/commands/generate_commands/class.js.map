{"version":3,"sources":["commands/generate_commands/class.js"],"names":["builder","generateAnyClass","generateClass","handler","path","fs","_","writeFileFromTemplate","getConfiguration","getDataConfiguration","SimpleDataContext","getBuilder","generateDefinition","command","desc","yargs","option","default","describe","argv","options","config","sources","getEdm","then","schema","console","log","name","entityType","map","x","Object","assign","split","Promise","all","ignoreOther","resolve","reject","test","error","Error","context","emptyModel","upperFirst","camelCase","fields","attributes","inherits","dataTypes","model","imports","inheritsClassPath","concat","dasherize","push","forEach","dataType","type","typeName","many","hasOwnProperty","nullable","importModel","find","destFile","destPath","process","cwd","base","existsSync","force","silent","templateFile","__dirname","destFolder","dirname","ensureDir","err","generateExtra","filter","catch","exit"],"mappings":"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","file":"class.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2017, THEMOST LP All rights reserved\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport path from 'path';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\nimport { writeFileFromTemplate, getConfiguration, getDataConfiguration, SimpleDataContext, getBuilder } from '../../util';\nimport { generateDefinition } from './classdef';\n\nexport const command = 'class <name>';\n\nexport const desc = 'Generate a new data model class';\n\nexport function builder(yargs) {\n    return yargs.option('silent', {\n        default: false,\n        describe: 'disable errors'\n    }).option('force', {\n        default: false,\n        describe: 'replace if exists'\n    });\n}\n\nexport function generateAnyClass(argv) {\n    \n    //get cli options\n    let options = getConfiguration();\n    //get data configuration\n    let config = getDataConfiguration(options);\n    //get OData Builder\n    let builder = getBuilder(config);\n    let sources = [];\n    return builder.getEdm().then((schema)=> {\n        console.log('INFO', argv);\n        if (argv.name === 'app' || argv.name === '*') {\n            sources = schema.entityType.map((x)=> {\n                return generateClass(Object.assign({}, argv, {\n                    \"name\": x.name,\n                    \"silent\": true\n                }), true);\n            });\n        }\n        else {\n            sources = argv.name.split('+').map((x)=> {\n                return generateClass(Object.assign({}, argv, {\n                    \"name\": x,\n                    \"silent\": true\n                }), false);\n            });\n        }\n        return Promise.all(sources);\n    });\n    \n}\n\nexport function generateClass(argv, ignoreOther) {\n    return new Promise((resolve, reject) => {\n        //get cli options\n        let options = getConfiguration();\n        //get data configuration\n        let config = getDataConfiguration(options);\n        //validating name\n        if (!/^[a-zA-Z0-9_-]+$/.test(argv.name)) {\n            console.error('ERROR', 'An error occurred while validating class name.');\n            return reject(new Error('Class name is not valid. Expected only latin characters, numbers or \"_,-\" characters.'));\n        }\n        //--\n        let context = new SimpleDataContext(config);\n        //get OData Builder\n        let builder = getBuilder(config);\n        return builder.getEdm().then((schema)=> {\n                //get model definition\n                let emptyModel = {\n                        name: _.upperFirst(_.camelCase(argv.name)),\n                        fields: [],\n                        attributes:[],\n                        inherits: null\n                    };\n                let dataTypes = config.getDataConfiguration().dataTypes;\n                let model = context.model(argv.name) || emptyModel;\n                model.inherits = model.inherits || null; \n                model.imports = [];\n                if (model.inherits) {\n                    model.inheritsClassPath = \"./\".concat(_.dasherize(model.inherits).concat('-model'));\n                    model.imports.push({\n                      \"name\": model.inherits,\n                      \"from\": model.inheritsClassPath\n                    });\n                }\n                else {\n                    model.imports.push({\n                      \"name\": \"{DataObject}\",\n                      \"from\": \"@themost/data/data-object\"\n                    });\n                }\n                model.attributes.forEach((x)=> {\n                   //format data type\n                    let dataType = dataTypes[x.type];\n                    if (typeof x.type === 'undefined') {\n                        x.typeName = x.many ?  \"Array<*>\" : \"*\";\n                        return;\n                    }\n                    if (!x.hasOwnProperty('nullable')) {\n                        x.nullable = true;\n                    }\n                    //add import\n                    if (x.model === model.name) {\n                        let importModel = context.model(x.type);\n                        if (importModel && importModel.name !== model.name) {\n                            if (typeof model.imports.find((x)=> { return x.name === importModel.name }) === 'undefined') {\n                                model.imports.push({\n                                    \"name\": importModel.name,\n                                    \"from\": \"./\".concat(_.dasherize(importModel.name).concat('-model'))\n                                });    \n                            }\n                            x.typeName = x.many ?  \"Array<\" + x.type + \"|any>\" : x.type + \"|any\";\n                            return;\n                        }    \n                    }\n                    if (dataType) {\n                        x.typeName = x.many ?  \"Array<\" + dataType.type + \">\" : dataType.type;\n                        return;\n                    }\n                    x.typeName = x.many ?  \"Array<\" + x.type + \">\" : x.type;\n                });\n                //get file name\n                let destFile = _.dasherize(argv.name).concat('-model.js');\n                console.log('INFO', `Generating class ${destFile}`);\n                let destPath = path.resolve(process.cwd(), options.base, `models/${destFile}`);\n                console.log('INFO', `Validating class path ${destPath}`);\n                if (fs.existsSync(destPath) && !argv.force) {\n                    if (argv.silent) {\n                        console.error('WARNING', `The specified class [${argv.name}] already exists.`);\n                        return resolve();\n                    }\n                    console.error('ERROR', 'An error occurred while validating class.');\n                    return reject(new Error('The specified class already exists.'));\n                }\n                //get template file path\n                let templateFile = path.resolve(__dirname, '../../../templates/generate/class.js.ejs');\n                //get destination folder path\n                let destFolder = path.dirname(destPath);\n                console.error('INFO', `Validating class folder (${destFolder}).`);\n                fs.ensureDir(destFolder, (err) => {\n                    if (err) {\n                        console.error('ERROR', 'An error occurred while validating destination path.');\n                        return reject(err);\n                    }\n                    writeFileFromTemplate(templateFile, destPath, model).then(() => {\n                        console.log('INFO', 'The operation was completed succesfully.');\n                        if (ignoreOther) {\n                            return generateDefinition(Object.assign({}, argv, {\n                                \"name\": model.name,\n                                \"silent\": true\n                                }), true).then(()=> {\n                                    return resolve();        \n                                });\n                        }\n                        let generateExtra = model.imports.filter((x)=> {\n                           return x.name !== \"{DataObject}\";\n                        }).map((x)=> {\n                            return generateClass(Object.assign({}, argv, {\n                                    \"name\": x.name,\n                                    \"silent\": true\n                                }));\n                        });\n                        Promise.all(generateExtra).then(()=> {\n                            return generateDefinition(Object.assign({}, argv, {\n                                \"name\": model.name,\n                                \"silent\": true\n                                })).then(()=> {\n                                    return resolve();        \n                                });\n                        }).catch((err)=> {\n                            return reject(err);\n                        });\n                    }).catch((err) => {\n                        console.error('ERROR', 'An error occurred while generating data model class.');\n                        return reject(err);\n                    });\n                });\n        });\n    });\n}\n\nexport function handler(argv) {\n    generateAnyClass(argv).then(() => {\n        return process.exit(0);\n    }).catch((err) => {\n        console.error(err);\n        return process.exit(1);\n    });\n}"]}