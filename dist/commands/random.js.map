{"version":3,"sources":["commands/random.js"],"names":["handler","path","command","desc","builder","type","default","min","max","length","argv","console","log","RandomCommand","randomInt","newGuid","randomString","UUID_CHARS","split","Math","floor","random","chars","str","i","substr","uuid","r","join","yargs","usage","help","updateStrings","wrap"],"mappings":";;;;;;;;;QAoBgBA,O,GAAAA,O;;AApBhB;;IAAOC,I;;;;;;AACA,IAAMC,4BAAU,yBAAhB;;AAEA,IAAMC,sBAAO,6CAAb;;AAEA,IAAMC,4BAAU;AACnBC,UAAM;AACFC,iBAAQ;AADN,KADa;AAInBC,SAAK;AACDD,iBAAQ;AADP,KAJc;AAOnBE,SAAK;AACDF,iBAAQ;AADP,KAPc;AAUnBG,YAAQ;AACJH,iBAAQ;AADJ;AAVW,CAAhB;;AAeA,SAASN,OAAT,CAAiBU,IAAjB,EAAuB;AAC1B,QAAIA,KAAKL,IAAL,KAAc,KAAlB,EAAyB;AACrB,eAAOM,QAAQC,GAAR,CAAYC,cAAcC,SAAd,CAAwBJ,KAAKH,GAA7B,EAAiCG,KAAKF,GAAtC,CAAZ,CAAP;AACH,KAFD,MAGK,IAAIE,KAAKL,IAAL,KAAc,MAAlB,EAA0B;AAC3B,eAAOM,QAAQC,GAAR,CAAYC,cAAcE,OAAd,EAAZ,CAAP;AACH,KAFI,MAGA,IAAIL,KAAKL,IAAL,KAAc,QAAlB,EAA4B;AAC7B,eAAOM,QAAQC,GAAR,CAAYC,cAAcG,YAAd,CAA2BN,KAAKD,MAAhC,CAAZ,CAAP;AACH;AACJ;;AAED,IAAMQ,aAAa,iEAAiEC,KAAjE,CAAuE,EAAvE,CAAnB;;IAEaL,a,WAAAA,a;;;;;;;kCAEQN,G,EAAKC,G,EAAK;AACvB,mBAAOW,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAcb,GAAzB,IAAgCD,GAAvC;AACH;;;qCAEmBE,M,EAAQ;AACxBA,qBAASA,UAAU,EAAnB;AACA,gBAAIa,QAAQ,uDAAZ;AACA,gBAAIC,MAAM,EAAV;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIf,MAAnB,EAA2Be,GAA3B,EAAgC;AAC5BD,uBAAOD,MAAMG,MAAN,CAAaZ,cAAcC,SAAd,CAAwB,CAAxB,EAA2BQ,MAAMb,MAAN,GAAa,CAAxC,CAAb,EAAwD,CAAxD,CAAP;AACH;AACD,mBAAOc,GAAP;AACH;;;kCAEiB;AACd,gBAAID,QAAQL,UAAZ;AAAA,gBAAwBS,OAAO,EAA/B;AAAA,gBAAmCF,UAAnC;AACA;AACA,gBAAIG,UAAJ;AACA;AACAD,iBAAK,CAAL,IAAUA,KAAK,EAAL,IAAWA,KAAK,EAAL,IAAWA,KAAK,EAAL,IAAW,GAA3C;AACAA,iBAAK,EAAL,IAAW,GAAX;;AAEA;AACA;AACA,iBAAKF,IAAI,CAAT,EAAYA,IAAI,EAAhB,EAAoBA,GAApB,EAAyB;AACrB,oBAAI,CAACE,KAAKF,CAAL,CAAL,EAAc;AACVG,wBAAI,IAAIR,KAAKE,MAAL,KAAc,EAAtB;AACAK,yBAAKF,CAAL,IAAUF,MAAOE,KAAK,EAAN,GAAaG,IAAI,GAAL,GAAY,GAAxB,GAA8BA,CAApC,CAAV;AACH;AACJ;AACD,mBAAOD,KAAKE,IAAL,CAAU,EAAV,CAAP;AACH;;;gCAEcC,K,EAAO;AAClB,mBAAOA,MACFC,KADE,CACI,4BADJ,EAEF5B,OAFE,CAEM,MAFN,EAEc,6BAFd,EAE6C,UAAU2B,KAAV,EAAiB;AAC7D,uBAAOhB,cAAcE,OAAd,EAAP;AACH,aAJE,EAKFb,OALE,CAKM,iBALN,EAKyB,wBALzB,EAKmD,UAAU2B,KAAV,EAAiB;AACnE,uBAAOhB,cAAcG,YAAd,CAA2Ba,MAAMpB,MAAjC,CAAP;AACH,aAPE,EAQFsB,IARE,CAQG,MARH,EASFC,aATE,CASY;AACX,6BAAa;AADF,aATZ,EAYFC,IAZE,CAYG,IAZH,EAaFvB,IAbL;AAcH","file":"random.js","sourcesContent":["import path from 'path';\nexport const command = 'random <type> [options]';\n\nexport const desc = 'Create a new random string, integer or guid';\n\nexport const builder = {\n    type: {\n        default:'int'\n    },\n    min: {\n        default:0\n    },\n    max: {\n        default:1000000\n    },\n    length: {\n        default:8\n    }\n};\n\nexport function handler(argv) {\n    if (argv.type === 'int') {\n        return console.log(RandomCommand.randomInt(argv.min,argv.max));\n    }\n    else if (argv.type === 'guid') {\n        return console.log(RandomCommand.newGuid());\n    }\n    else if (argv.type === 'string') {\n        return console.log(RandomCommand.randomString(argv.length));\n    }\n}\n\nconst UUID_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n\nexport class RandomCommand {\n\n    static randomInt(min, max) {\n        return Math.floor(Math.random()*max) + min;\n    }\n\n    static randomString(length) {\n        length = length || 16;\n        let chars = \"abcdefghkmnopqursuvwxz2456789ABCDEFHJKLMNPQURSTUVWXYZ\";\n        let str = \"\";\n        for(let i = 0; i < length; i++) {\n            str += chars.substr(RandomCommand.randomInt(0, chars.length-1),1);\n        }\n        return str;\n    }\n\n    static  newGuid() {\n        let chars = UUID_CHARS, uuid = [], i;\n        // rfc4122, version 4 form\n        let r;\n        // rfc4122 requires these characters\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n        uuid[14] = '4';\n\n        // Fill in random data.  At i==19 set the high bits of clock sequence as\n        // per rfc4122, sec. 4.1.5\n        for (i = 0; i < 36; i++) {\n            if (!uuid[i]) {\n                r = 0 | Math.random()*16;\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n            }\n        }\n        return uuid.join('');\n    }\n\n    static command(yargs) {\n        return yargs\n            .usage('usage: <command> [options]')\n            .command('guid', 'create a random GUID string', function (yargs) {\n                return RandomCommand.newGuid();\n            })\n            .command('string <length>', 'create a random string', function (yargs) {\n                return RandomCommand.randomString(yargs.length);\n            })\n            .help('help')\n            .updateStrings({\n                'Commands:': 'command:'\n            })\n            .wrap(null)\n            .argv;\n    }\n\n}"]}