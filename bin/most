#!/usr/bin/env node
/**
 * Created by Kyriakos Barbounakis<k.barbounakis@gmail.com> on 20/11/2014.
 */
var program = require('commander'), version = require('./../package.json').version;
program.version(version).allowUnknownOption()
    .option('-o, --operation <value>')
    .option('-o, --operation <value>')
    .option('-m, --model <value>')
    .option('-t, --type <value>')
    .option('-n, --name <value>')
    .option('-i, --input <path>')
    .option('-l, --local <value>')
    .option('-s, --size <value>')
    .option('-f, --format <value>');

program.on('--help', function(){
    console.log('MOST Web Framework command utility usage:');
    console.log('=========================================');
    console.log('$ most --help');
    console.log('$ most -o generate');
    console.log('$ most -o migrate -m <Model name>');
    console.log('$ most -o import -m <Model name> -i <File path>');
    console.log('$ most -o add -t field -m <Model name> -n <Field template name>');
    console.log('$ most -o random -f [string|int|hex|guid] -s 16');
    console.log('=========================================');
});

try {
    program.parse(process.argv);
    if (program.operation) {
        //load operation from lib
        var op = require('./../lib/'+ program.operation);
        if (typeof op.invoke !=='function') {
            console.error('The operation cannot be completed due to invalid signature.\n');
            return;
        }
        op.invoke(program, function(err, result) {
            if (err) {
                console.error('The operation cannot be completed due to internal error.\n');
                console.error(err.message);
                if (err.stack) {
                    console.error(err.stack);
                }
            }
            else {
                console.log('The operation was completed succesfully.');
                process.exit(0);
            }
        });
    }
    else if (process.argv[0]=="--version" || process.argv[0]=="-v") {
        console.log(version);
    }
    else {
        program.emit('--help');
    }
}
catch (e) {
    console.log('An unexpected error occurred. ' + e.message);
    process.exit();
}


